{
	"name": "ELSE_ECOLABDATALAKE_AZONE_DIM_PAYMENT_METHOD",
	"properties": {
		"folder": {
			"name": "Analytics/O2CAZ"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Delimited_Dataset",
						"type": "DatasetReference"
					},
					"name": "SrcCntl"
				},
				{
					"dataset": {
						"referenceName": "Delimited_Dataset",
						"type": "DatasetReference"
					},
					"name": "viewEXPL"
				},
				{
					"dataset": {
						"referenceName": "Delimited_Dataset",
						"type": "DatasetReference"
					},
					"name": "view1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Parquet_Dataset",
						"type": "DatasetReference"
					},
					"name": "outputparquet"
				},
				{
					"dataset": {
						"referenceName": "Delimited_Dataset",
						"type": "DatasetReference"
					},
					"name": "outputtsv"
				},
				{
					"dataset": {
						"referenceName": "Delimited_Dataset",
						"type": "DatasetReference"
					},
					"name": "updatecntl"
				}
			],
			"transformations": [
				{
					"name": "Filter1"
				},
				{
					"name": "maxdate"
				},
				{
					"name": "Select1"
				},
				{
					"name": "expl"
				},
				{
					"name": "Join1"
				},
				{
					"name": "Join2"
				},
				{
					"name": "Filter2"
				},
				{
					"name": "Aggregate1"
				},
				{
					"name": "Delta"
				},
				{
					"name": "getDeltaRowNum"
				},
				{
					"name": "MaxDimKey"
				},
				{
					"name": "Join3"
				},
				{
					"name": "appendMaxKey"
				},
				{
					"name": "GetNewKeyDelta"
				},
				{
					"name": "Join4"
				},
				{
					"name": "Filter3"
				},
				{
					"name": "Inserts"
				},
				{
					"name": "Join5"
				},
				{
					"name": "Updates"
				},
				{
					"name": "Join6"
				},
				{
					"name": "Filter4"
				},
				{
					"name": "Aggregate2"
				},
				{
					"name": "DerivedColumn4"
				},
				{
					"name": "getnewcntlvalue"
				},
				{
					"name": "UnionALL"
				},
				{
					"name": "Sort1"
				},
				{
					"name": "lrd"
				},
				{
					"name": "Select5"
				},
				{
					"name": "Select6"
				},
				{
					"name": "Select7"
				},
				{
					"name": "Existing"
				},
				{
					"name": "Union3"
				}
			],
			"script": "parameters{\n\tAudit_Path as string ('Analytics/EnterpriseCertified/EnterpriseApps/CommercialReporting/AUDIT_DATA/'),\n\tsrc_filename_Audit_PaymentMethod_Cntl as string ('PaymentMethod_Cntl'),\n\tfile_extension_tsv as string ('.tsv'),\n\tsrc_path_Exploration as string ('Exploration/EnterpriseBackbone/EBS/'),\n\tfile_name_0PYMT_METH as string ('0PYMT_METH'),\n\tAnalytics_Path as string ('Analytics/EnterpriseCertified/EnterpriseDims/'),\n\tfile_name_dim_payment_method as string ('dim_payment_method'),\n\tfile_extension_parquet as string ('.parquet'),\n\tAnalytics_Folder_PAYMENT_METHOD as string ('PAYMENT_METHOD/')\n}\nsource(output(\n\t\tLastRunDate as string,\n\t\tStatus as string,\n\t\tSubjectArea as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:[($Audit_Path+$src_filename_Audit_PaymentMethod_Cntl+$file_extension_tsv)]) ~> SrcCntl\nsource(output(\n\t\tCountryCd as string,\n\t\tPaymentMethCd as string,\n\t\tPaymentMethName as string,\n\t\tCreatedDtTm as string,\n\t\tLastUpdtDtTm as string,\n\t\tJobId as string,\n\t\tFileName as string,\n\t\tIsDeletedInd as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:[($src_path_Exploration+$file_name_0PYMT_METH+'/'+$file_name_0PYMT_METH+$file_extension_tsv)]) ~> viewEXPL\nsource(output(\n\t\tPaymentMethodKey as long,\n\t\tCountryCd as string,\n\t\tPaymentMethCd as string,\n\t\tPaymentMethName as string,\n\t\tCreatedDtTm as string,\n\t\tLastUpdtDtTm as string,\n\t\tIsDeletedInd as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:[($Analytics_Path + $Analytics_Folder_PAYMENT_METHOD + $file_name_dim_payment_method + $file_extension_tsv)]) ~> view1\nSrcCntl filter(SubjectArea=='PaymentMethod' && Status=='S') ~> Filter1\nFilter1 aggregate(groupBy(SubjectArea,\n\t\tStatus),\n\tLastRunDate = max(toString(toTimestamp(LastRunDate,'M/d/yyyy h:mm:ss a')))) ~> maxdate\nviewEXPL select(mapColumn(\n\t\tCountryCd,\n\t\tPaymentMethCd,\n\t\tPaymentMethName,\n\t\tCreatedDtTm,\n\t\tLastUpdtDtTm,\n\t\tIsDeletedInd\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(CreatedDtTm = coalesce(CreatedDtTm,'01/01/1900 00:00:00'),\n\t\tLastUpdtDtTm = coalesce(LastUpdtDtTm,'01/01/1900 00:00:00'),\n\t\tSubject = 'PaymentMethod') ~> expl\nexpl, maxdate join(SubjectArea == Subject,\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> Join1\nexpl, lrd join(Select1@CountryCd == lrd@CountryCd\n\t&& Select1@PaymentMethCd == lrd@PaymentMethCd,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join2\nJoin2 filter(toTimestamp(toString(toTimestamp(expl@LastUpdtDtTm,'MM/dd/yyyy HH:mm:ss'),'yyyy-mm-dd HH:mm:ss'),'yyyy-mm-dd HH:mm:ss') > toTimestamp(LastRunDate,'yyyy-mm-dd HH:mm:ss')) ~> Filter2\nSelect5 aggregate(groupBy(CountryCd,\n\t\tPaymentMethCd,\n\t\tPaymentMethName,\n\t\tCreatedDtTm,\n\t\tLastUpdtDtTm,\n\t\tIsDeletedInd,\n\t\tSubject),\n\tdummy = count(CountryCd)) ~> Aggregate1\nAggregate1 select(mapColumn(\n\t\tCountryCd,\n\t\tPaymentMethCd,\n\t\tPaymentMethName,\n\t\tCreatedDtTm,\n\t\tLastUpdtDtTm,\n\t\tIsDeletedInd,\n\t\tSubject\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Delta\nDelta window(desc(concat(CountryCd,PaymentMethCd), true),\n\tNewPaymentMethodKey = rowNumber()) ~> getDeltaRowNum\nview1 aggregate(MaxPaymentMethodKey = max(PaymentMethodKey)) ~> MaxDimKey\ngetDeltaRowNum, MaxDimKey join(1 == 1 || !isNull(CountryCd) || !isNull(MaxPaymentMethodKey),\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> Join3\nJoin3 derive(MaxPaymentMethodKey = case(isNull(MaxPaymentMethodKey), toLong(0) ,(case(MaxPaymentMethodKey<=0,toLong(0),MaxPaymentMethodKey)))) ~> appendMaxKey\nappendMaxKey derive(PaymentMethodKey = NewPaymentMethodKey+MaxPaymentMethodKey) ~> GetNewKeyDelta\nGetNewKeyDelta, view1 join(Delta@CountryCd == view1@CountryCd\n\t&& Delta@PaymentMethCd == view1@PaymentMethCd,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join4\nJoin4 filter(isNull(view1@CountryCd) || isNull(view1@PaymentMethCd)) ~> Filter3\nSelect6 derive(CreatedDtTm = toString(currentTimestamp(),'MM/dd/yyyy HH:mm:ss'),\n\t\tLastUpdtDtTm = toString(currentTimestamp(),'MM/dd/yyyy HH:mm:ss')) ~> Inserts\nGetNewKeyDelta, view1 join(Delta@CountryCd == view1@CountryCd\n\t&& Delta@PaymentMethCd == view1@PaymentMethCd,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join5\nSelect7 derive(LastUpdtDtTm = toString(currentTimestamp(),'MM/dd/yyyy HH:mm:ss')) ~> Updates\nGetNewKeyDelta, view1 join(Delta@CountryCd == view1@CountryCd\n\t&& Delta@PaymentMethCd == view1@PaymentMethCd,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> Join6\nJoin6 filter(isNull(Delta@CountryCd) || isNull(Delta@PaymentMethCd)) ~> Filter4\nDerivedColumn4 aggregate(groupBy(LastRunDate,\n\t\tStatus,\n\t\tSubjectArea),\n\tdummy = count(1)) ~> Aggregate2\nSrcCntl derive(LastRunDate = toString(currentTimestamp(),'M/d/yyyy h:mm:ss a'),\n\t\tStatus = 'S',\n\t\tSubjectArea = 'PaymentMethod') ~> DerivedColumn4\nAggregate2 select(mapColumn(\n\t\tLastRunDate,\n\t\tStatus,\n\t\tSubjectArea\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> getnewcntlvalue\ngetnewcntlvalue, SrcCntl union(byName: true)~> UnionALL\nUnionALL sort(asc(LastRunDate, true)) ~> Sort1\nJoin1 select(mapColumn(\n\t\tCountryCd,\n\t\tPaymentMethCd,\n\t\tPaymentMethName,\n\t\tCreatedDtTm,\n\t\tLastUpdtDtTm,\n\t\tIsDeletedInd,\n\t\tSubject,\n\t\tLastRunDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> lrd\nFilter2 select(mapColumn(\n\t\tCountryCd = Select1@CountryCd,\n\t\tPaymentMethCd = Select1@PaymentMethCd,\n\t\tPaymentMethName = Select1@PaymentMethName,\n\t\tCreatedDtTm = expl@CreatedDtTm,\n\t\tLastUpdtDtTm = expl@LastUpdtDtTm,\n\t\tIsDeletedInd = Select1@IsDeletedInd,\n\t\tSubject = expl@Subject\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nFilter3 select(mapColumn(\n\t\tCountryCd = Delta@CountryCd,\n\t\tPaymentMethCd = Delta@PaymentMethCd,\n\t\tPaymentMethName = Delta@PaymentMethName,\n\t\tCreatedDtTm = Delta@CreatedDtTm,\n\t\tLastUpdtDtTm = Delta@LastUpdtDtTm,\n\t\tIsDeletedInd = Delta@IsDeletedInd,\n\t\tPaymentMethodKey = GetNewKeyDelta@PaymentMethodKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select6\nJoin5 select(mapColumn(\n\t\tPaymentMethName = Delta@PaymentMethName,\n\t\tIsDeletedInd = Delta@IsDeletedInd,\n\t\tCountryCd = view1@CountryCd,\n\t\tPaymentMethCd = view1@PaymentMethCd,\n\t\tCreatedDtTm = view1@CreatedDtTm,\n\t\tLastUpdtDtTm = view1@LastUpdtDtTm,\n\t\tPaymentMethodKey = view1@PaymentMethodKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: false) ~> Select7\nFilter4 select(mapColumn(\n\t\tCountryCd = view1@CountryCd,\n\t\tPaymentMethCd = view1@PaymentMethCd,\n\t\tPaymentMethName = view1@PaymentMethName,\n\t\tCreatedDtTm = view1@CreatedDtTm,\n\t\tLastUpdtDtTm = view1@LastUpdtDtTm,\n\t\tIsDeletedInd = view1@IsDeletedInd,\n\t\tPaymentMethodKey = view1@PaymentMethodKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: false) ~> Existing\nInserts, Updates, Existing union(byName: true)~> Union3\nUnion3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:[($Analytics_Path + $Analytics_Folder_PAYMENT_METHOD + $file_name_dim_payment_method +$file_extension_parquet)],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\tmapColumn(\n\t\tPaymentMethodKey,\n\t\tCountryCd,\n\t\tPaymentMethCd,\n\t\tPaymentMethName,\n\t\tCreatedDtTm,\n\t\tLastUpdtDtTm,\n\t\tIsDeletedInd\n\t),\n\tpartitionBy('hash', 1)) ~> outputparquet\nUnion3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[($Analytics_Path + $Analytics_Folder_PAYMENT_METHOD + $file_name_dim_payment_method +$file_extension_tsv)],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2,\n\tmapColumn(\n\t\tPaymentMethodKey,\n\t\tCountryCd,\n\t\tPaymentMethCd,\n\t\tPaymentMethName,\n\t\tCreatedDtTm,\n\t\tLastUpdtDtTm,\n\t\tIsDeletedInd\n\t),\n\tpartitionBy('hash', 1)) ~> outputtsv\nSort1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[($Audit_Path+$src_filename_Audit_PaymentMethod_Cntl+$file_extension_tsv)],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 3,\n\tpartitionBy('hash', 1)) ~> updatecntl"
		}
	}
}