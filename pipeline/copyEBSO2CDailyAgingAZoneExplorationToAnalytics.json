{
	"name": "copyEBSO2CDailyAgingAZoneExplorationToAnalytics",
	"properties": {
		"description": "This is used for Loading Aging Fact Data in Analytic Zone",
		"activities": [
			{
				"name": "ECOLABDATALAKE_O2C_AGING_FACT_DAILY",
				"type": "ExecuteDataFlow",
				"dependsOn": [],
				"policy": {
					"timeout": "0.05:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "ECOLABDATALAKE_O2C_AGING_FACT_DAILY",
						"type": "DataFlowReference",
						"parameters": {
							"path_OToC_Aging_Cntl_Daily": {
								"value": "'@{pipeline().parameters.path_OToC_Aging_Cntl_Daily}'",
								"type": "Expression"
							},
							"file_OToC_Aging_Cntl_Daily": {
								"value": "'@{pipeline().parameters.file_OToC_Aging_Cntl_Daily}'",
								"type": "Expression"
							},
							"file_extension_tsv": {
								"value": "'@{pipeline().parameters.file_extension_tsv}'",
								"type": "Expression"
							},
							"file_extension_parquet": {
								"value": "'@{pipeline().parameters.file_extension_parquet}'",
								"type": "Expression"
							},
							"path_soldtopayerlookup": {
								"value": "'@{pipeline().parameters.path_soldtopayerlookup}'",
								"type": "Expression"
							},
							"file_soldtopayerlookup": {
								"value": "'@{pipeline().parameters.file_soldtopayerlookup}'",
								"type": "Expression"
							},
							"file_BillingSoldTolookup": {
								"value": "'@{pipeline().parameters.file_BillingSoldTolookup}'",
								"type": "Expression"
							},
							"path_dim_customer": {
								"value": "'@{pipeline().parameters.path_dim_customer}'",
								"type": "Expression"
							},
							"file_dim_customer": {
								"value": "'@{pipeline().parameters.file_dim_customer}'",
								"type": "Expression"
							},
							"path_dim_base_customer_hierarchy": {
								"value": "'@{pipeline().parameters.path_dim_base_customer_hierarchy}'",
								"type": "Expression"
							},
							"file_dim_base_customer_hierarchy": {
								"value": "'@{pipeline().parameters.file_dim_base_customer_hierarchy}'",
								"type": "Expression"
							},
							"path_SALES_LKP_CUSTOMER_XREF": {
								"value": "'@{pipeline().parameters.path_SALES_LKP_CUSTOMER_XREF}'",
								"type": "Expression"
							},
							"file_SALES_LKP_CUSTOMER_XREF": {
								"value": "'@{pipeline().parameters.file_SALES_LKP_CUSTOMER_XREF}'",
								"type": "Expression"
							},
							"path_2LIS_13_VDITM": {
								"value": "'@{pipeline().parameters.path_2LIS_13_VDITM}'",
								"type": "Expression"
							},
							"file_2LIS_13_VDITM": {
								"value": "'@{pipeline().parameters.file_2LIS_13_VDITM}'",
								"type": "Expression"
							},
							"path_0FI_AR_4": {
								"value": "'@{pipeline().parameters.path_0FI_AR_4}'",
								"type": "Expression"
							},
							"file_0FI_AR_4": {
								"value": "'@{pipeline().parameters.file_0FI_AR_4}'",
								"type": "Expression"
							},
							"path_BillingSoldTolookup": {
								"value": "'@{pipeline().parameters.path_BillingSoldTolookup}'",
								"type": "Expression"
							},
							"file_AR_Transactions": {
								"value": "'@{concat('temp_',pipeline().parameters.file_AR_Transactions)}'",
								"type": "Expression"
							},
							"path_AR_Transactions": {
								"value": "'@{pipeline().parameters.path_AR_Transactions}'",
								"type": "Expression"
							},
							"delta_folder_path": {
								"value": "'@{concat(\nformatDateTime(pipeline().TriggerTime, 'yyyy'), '/',\nformatDateTime(pipeline().TriggerTime, 'MM'), '/',\nformatDateTime(pipeline().TriggerTime, 'dd'), '/')}'",
								"type": "Expression"
							},
							"JobId": {
								"value": "'@{pipeline().RunId}'",
								"type": "Expression"
							},
							"Parquet_folder": {
								"value": "'@{pipeline().parameters.Parquet_folder}'",
								"type": "Expression"
							},
							"tsv_folder": {
								"value": "'@{pipeline().parameters.tsv_folder}'",
								"type": "Expression"
							},
							"SubjectAreacntl": {
								"value": "'@{pipeline().parameters.SubjectAreacntl}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"OToCAgingCntlDaily": {
								"Container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								},
								"Delimiter": {
									"value": "@pipeline().parameters.delimiter",
									"type": "Expression"
								}
							},
							"SoldToPayerLookup": {
								"Container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								},
								"Delimiter": {
									"value": "@pipeline().parameters.delimiter",
									"type": "Expression"
								}
							},
							"BillingSoldTolookup": {
								"Container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								},
								"Delimiter": {
									"value": "@pipeline().parameters.delimiter",
									"type": "Expression"
								}
							},
							"DimCustomer": {
								"Container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								},
								"Delimiter": {
									"value": "@pipeline().parameters.delimiter",
									"type": "Expression"
								}
							},
							"DimBaseCustomerHierarchy": {
								"Container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								},
								"Delimiter": {
									"value": "@pipeline().parameters.delimiter",
									"type": "Expression"
								}
							},
							"SalesLkpCustomerXref": {
								"Container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								},
								"Delimiter": {
									"value": "@pipeline().parameters.delimiter",
									"type": "Expression"
								}
							},
							"LIS13VDITM": {
								"Container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								},
								"Delimiter": {
									"value": "@pipeline().parameters.delimiter",
									"type": "Expression"
								}
							},
							"FIAR4": {
								"Container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								},
								"Delimiter": {
									"value": "@pipeline().parameters.delimiter",
									"type": "Expression"
								}
							},
							"sink1": {
								"Container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								},
								"Delimiter": {
									"value": "@pipeline().parameters.delimiter",
									"type": "Expression"
								}
							},
							"sink2": {
								"tgt_container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								}
							},
							"sink3": {
								"Container": {
									"value": "@pipeline().parameters.container",
									"type": "Expression"
								},
								"Delimiter": {
									"value": "@pipeline().parameters.delimiter",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 272,
						"computeType": "MemoryOptimized"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "DLL_Delimited_Encryption",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "ECOLABDATALAKE_O2C_AGING_FACT_DAILY",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.05:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": {
						"value": "@concat(if(equals(pipeline().DataFactory,'mapdatafactory001d2'),'/CommercialReportingDev',\nif(equals(pipeline().DataFactory,'MAPADFSALES002Q'),'/CommercialReportingQA',\nif(equals(pipeline().DataFactory,'mapdatafactory002p'),'/CommercialReporting',\nif(equals(pipeline().DataFactory,'mapadfUKIR002d'),'/CommercialReportingDev',\nif(equals(pipeline().DataFactory,'mapADFSALES002d'),'/CommercialReportingDev',\nif(equals(pipeline().DataFactory,'mapdatafactory003q'),'/CommercialReportingQA',\nif(equals(pipeline().DataFactory,'mapdatafactory002s'),'/CommercialReportingQA',\n''))))))),'/Encoding/DLL_Encoding')",
						"type": "Expression"
					},
					"baseParameters": {
						"storageName": {
							"value": "@pipeline().parameters.storageName",
							"type": "Expression"
						},
						"containerName": {
							"value": "@pipeline().parameters.Container",
							"type": "Expression"
						},
						"filePath": {
							"value": "@concat(pipeline().parameters.path_AR_Transactions,pipeline().parameters.tsv_folder,formatDateTime(pipeline().TriggerTime, 'yyyy'), '/',\nformatDateTime(pipeline().TriggerTime, 'MM'), '/',\nformatDateTime(pipeline().TriggerTime, 'dd'), '/')",
							"type": "Expression"
						},
						"fileName": {
							"value": "@concat('temp_',pipeline().parameters.file_AR_Transactions,pipeline().parameters.file_extension_tsv)",
							"type": "Expression"
						},
						"columnToEncrypt": {
							"value": "@pipeline().parameters.ColumnToEncrypt",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricksDLL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Delete_Delimited_Temp_File",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "ARCHIVAL_0FI_AR_4",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.05:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Archival_Dataset",
						"type": "DatasetReference",
						"parameters": {
							"Container": {
								"value": "@pipeline().parameters.container",
								"type": "Expression"
							},
							"Delimiter": {
								"value": "@pipeline().parameters.delimiter",
								"type": "Expression"
							},
							"Archival_Path": {
								"value": "@concat(pipeline().parameters.path_AR_Transactions,pipeline().parameters.tsv_folder,formatDateTime(pipeline().TriggerTime, 'yyyy'), '/',\nformatDateTime(pipeline().TriggerTime, 'MM'), '/',\nformatDateTime(pipeline().TriggerTime, 'dd'), '/')",
								"type": "Expression"
							}
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"wildcardFileName": {
							"value": "@{concat('temp_',pipeline().parameters.file_AR_Transactions,pipeline().parameters.file_extension_tsv)}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "DLL_Parquet_Encryption",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "ECOLABDATALAKE_O2C_AGING_FACT_DAILY",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.05:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": {
						"value": "@concat(if(equals(pipeline().DataFactory,'mapdatafactory001d2'),'/CommercialReportingDev',\nif(equals(pipeline().DataFactory,'MAPADFSALES002Q'),'/CommercialReportingQA',\nif(equals(pipeline().DataFactory,'mapdatafactory002p'),'/CommercialReporting',\nif(equals(pipeline().DataFactory,'mapADFSALES002d'),'/CommercialReportingDev',\nif(equals(pipeline().DataFactory,'mapadfUKIR002d'),'/CommercialReportingDev',\nif(equals(pipeline().DataFactory,'mapdatafactory003q'),'/CommercialReportingQA',\nif(equals(pipeline().DataFactory,'mapdatafactory002s'),'/CommercialReportingQA',\n''))))))),'/Encoding/DLL_Encoding')",
						"type": "Expression"
					},
					"baseParameters": {
						"storageName": {
							"value": "@pipeline().parameters.storageName",
							"type": "Expression"
						},
						"containerName": {
							"value": "@pipeline().parameters.Container",
							"type": "Expression"
						},
						"filePath": {
							"value": "@concat(pipeline().parameters.path_AR_Transactions,pipeline().parameters.Parquet_folder,formatDateTime(pipeline().TriggerTime, 'yyyy'), '/',\nformatDateTime(pipeline().TriggerTime, 'MM'), '/',\nformatDateTime(pipeline().TriggerTime, 'dd'), '/')",
							"type": "Expression"
						},
						"fileName": {
							"value": "@concat('temp_',pipeline().parameters.file_AR_Transactions,'.parquet')",
							"type": "Expression"
						},
						"columnToEncrypt": {
							"value": "@pipeline().parameters.ColumnToEncrypt",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricksDLL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Delete_Parquet_Temp_File",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "DLL_Parquet_Encryption",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.05:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Archival_Dataset",
						"type": "DatasetReference",
						"parameters": {
							"Container": {
								"value": "@pipeline().parameters.container",
								"type": "Expression"
							},
							"Delimiter": {
								"value": "@pipeline().parameters.delimiter",
								"type": "Expression"
							},
							"Archival_Path": {
								"value": "@concat(pipeline().parameters.path_AR_Transactions,pipeline().parameters.Parquet_folder,formatDateTime(pipeline().TriggerTime, 'yyyy'), '/',\nformatDateTime(pipeline().TriggerTime, 'MM'), '/',\nformatDateTime(pipeline().TriggerTime, 'dd'), '/')",
								"type": "Expression"
							}
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"wildcardFileName": {
							"value": "@{concat('temp_',pipeline().parameters.file_AR_Transactions,'.parquet')}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "ARCHIVAL_0FI_AR_4",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "DLL_Delimited_Encryption",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.05:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Archival_Dataset",
						"type": "DatasetReference",
						"parameters": {
							"Container": {
								"value": "@pipeline().parameters.container",
								"type": "Expression"
							},
							"Delimiter": {
								"value": "@pipeline().parameters.delimiter",
								"type": "Expression"
							},
							"Archival_Path": {
								"value": "@pipeline().parameters.path_0FI_AR_4",
								"type": "Expression"
							}
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true
					}
				}
			}
		],
		"parameters": {
			"path_OToC_Aging_Cntl_Daily": {
				"type": "string",
				"defaultValue": "test/source/Analytics/EnterpriseCertified/EnterpriseApps/CommercialReporting/AUDIT_DATA/"
			},
			"file_OToC_Aging_Cntl_Daily": {
				"type": "string",
				"defaultValue": "OToC_Aging_Cntl_Daily"
			},
			"file_extension_tsv": {
				"type": "string",
				"defaultValue": ".tsv"
			},
			"file_extension_parquet": {
				"type": "string",
				"defaultValue": ".parquet"
			},
			"path_soldtopayerlookup": {
				"type": "string",
				"defaultValue": "test/source/Exploration/EnterpriseBackbone/O2C_Lookup/"
			},
			"file_soldtopayerlookup": {
				"type": "string",
				"defaultValue": "soldtopayerlookup"
			},
			"path_AR_Transactions": {
				"type": "string",
				"defaultValue": "test/Dataflow_output/Analytics/EnterpriseCertified/EnterpriseFacts/Accounts_Receivable/AR_Transactions/"
			},
			"file_AR_Transactions": {
				"type": "string",
				"defaultValue": "AR_Transactions_temp"
			},
			"path_BillingSoldTolookup": {
				"type": "string",
				"defaultValue": "test/source/Exploration/EnterpriseBackbone/O2C_Lookup/"
			},
			"file_BillingSoldTolookup": {
				"type": "string",
				"defaultValue": "BillingSoldTolookup"
			},
			"path_dim_customer": {
				"type": "string",
				"defaultValue": "test/source/Analytics/EnterpriseCertified/EnterpriseDims/CUSTOMER_NA/"
			},
			"file_dim_customer": {
				"type": "string",
				"defaultValue": "dim_customer"
			},
			"path_dim_base_customer_hierarchy": {
				"type": "string",
				"defaultValue": "test/source/Analytics/EnterpriseCertified/EnterpriseDims/MDM_CUSTOMER_NA/"
			},
			"file_dim_base_customer_hierarchy": {
				"type": "string",
				"defaultValue": "dim_base_customer_hierarchy"
			},
			"path_SALES_LKP_CUSTOMER_XREF": {
				"type": "string",
				"defaultValue": "test/source/Exploration/EnterpriseBackbone/Lookups/USHistoricalSalesData/"
			},
			"file_SALES_LKP_CUSTOMER_XREF": {
				"type": "string",
				"defaultValue": "SALES_LKP_CUSTOMER_XREF"
			},
			"path_2LIS_13_VDITM": {
				"type": "string",
				"defaultValue": "test/source/Exploration/EnterpriseBackbone/EBS/2LIS_13_VDITM/"
			},
			"file_2LIS_13_VDITM": {
				"type": "string",
				"defaultValue": "2LIS_13_VDITM"
			},
			"path_0FI_AR_4": {
				"type": "string",
				"defaultValue": "test/source/Exploration/EnterpriseBackbone/EBS/0FI_AR_4/"
			},
			"file_0FI_AR_4": {
				"type": "string",
				"defaultValue": "0FI_AR_4"
			},
			"container": {
				"type": "string",
				"defaultValue": "offshore-test"
			},
			"delimiter": {
				"type": "string",
				"defaultValue": "\t"
			},
			"StorageName": {
				"type": "string",
				"defaultValue": "mapdatalakestore002d"
			},
			"ColumnToEncrypt": {
				"type": "string",
				"defaultValue": "URLTxt"
			},
			"SubjectAreacntl": {
				"type": "string",
				"defaultValue": "Aging_Daily"
			},
			"Parquet_folder": {
				"type": "string",
				"defaultValue": "Parquet"
			},
			"tsv_folder": {
				"type": "string",
				"defaultValue": "tsv"
			}
		},
		"folder": {
			"name": "Analytics"
		},
		"annotations": [],
		"lastPublishTime": "2022-01-07T14:17:15Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}